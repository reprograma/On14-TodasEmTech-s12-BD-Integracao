CRIAR ESTRUTURA MVC
$ mkdir src // criar pasta
$ cd src // entrar na pasta
$ touch app.js // criar arquivo
$ mkdir routes controllers models // criando as 3 pastas


CONFIGURANDO SERVIDOR
$ npm init -y
$ npm i express
$ npm i -D nodemon (o "-D" serve que para indicar o MODO DEV, só mantem na sua maquina, fica mais leve pra subir e nao sobe suas depencias de dev para cliente)
$ touch .gitignore
$ npm i cors

DEPOIS INSTALAÇÃO
Alterar no Package.json 
"start": "nodemon server.js"

Alterar no gitignore
node_modules/


DEPOIS CONFIGURAR SERVER, DAR START
$npm start

BANCO DE DADOS


Schema/Model é a mesma coisa

npm i mongoose - instalar via git ferramente de modelagem para mongo
facilita utilização do banco de dados / instalar dependencia

npm i dotenv-safe - serve ocultar dados sensiveis de publico, vc tem que colocar / usuario senha
.env no gitignore.

EM MODEL
chamar o mongoose no model = o new cria uma estancia nova preenchida?
chamar uma classe e estanciando com Schema e inserir a propriedades
    o require faz da propriedade obrigatoria





************* AULA QUARTA ***************
ODM é o Schema
ORM referencia arquivo de musica ao cantor

Na estrutura do Schema, o "number" qto tiver certeza que é numero, cuidado com os espaços e zeros a esquerda

Propriedades cartão de credito e debito herda a propriedades de cartão
ORM Mapeamento objeto-relacional é uma técnica de desenvolvimento utilizada para fazer uma relação dos objetos com os dados que eles representam.
ODM Object Data Model , modela os dados baseado em Orientação a Objeto OOP
No exemplo do cartao, relaciomos o numero, com cpf e nome (ORM) e modelamos a propriedade recebendo string ou number (ODM)




